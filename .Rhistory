plot(acm,2,3, Trow =FALSE, infaxes ="no",main =" Plano  2-3",
ylim =c(-1.5,1.3), col.col="black")
points(supcar$coor[,c(2 ,3)], col ="black")
text(supcar$coor[,c(2,3)], labels = attributes(admi[,1])$levels,
col ="black",pos =1, cex =0.8 , font =3)
library(FactoClass)
load("ninios8a11.Rda")
ninios8a11$Edad<-factor(ninios8a11$Edad)
load("ninios8a11.Rda")
library(ade4)
load("ninios8a11.Rda")
?qf
qf(0.025,9,4)
qf(0.05,9,4)
qf(0.975,9,4)
?ppois
ppois(3,lambda = 2)
ppois(3,lambda = 4)
qpois(3,lambda = 4)
dpois(3,lambda = 2)
dpois(3,lambda = 4)
qnorm(0.995)
qnorm(0.75)
qnorm(0.975)
qnorm(0.95)
ppois(1,lambda = 3)
1- ppois(6,lambda = 3)
ppois(1,lambda = 1)
ppois(6,lambda = 1)
1 - ppois(6,lambda = 1)
ppois(0,lambda = 3)
ppois(0,lambda = 3) + (1 - ppois(6,lambda = 3))
ppois(0,lambda = 1) + (1 - ppois(6,lambda = 1))
library(FactoClass)
## primer traeremos los datos a
Density <- c(0.801,0.824,0.824)
## primer traeremos los datos a
Density <- c(0.801,0.824,0.841,.816)
## primer traeremos los datos
Density <- c(0.801,0.824,0.841,.816,.840,.842,.820,.802,.828,.819,.826,.802)
strenght_MD <- c(121.41,127.7,129.2,131.8,135.1,131.5,126.7,115.1,130.8,124.6,118.31,114.2)
strenght_CD <- c(70.42,72.47,78.2,74.89,71.21,78.39,69.02,73.1,79.28,76.48,70.25,72.88)
# crear el data frame
data.frame(Density,strenght_MD,strenght_CD)
## primer traeremos los datos
Density <- c(0.801,0.824,0.841,.816,.840,.842,.820,.802,.828,.819,.826,.802,.810,.802,.832,.796,
.759,.770,.759,.772,.806,.803,.845,.822)
strenght_MD <- c(121.41,127.7,129.2,131.8,135.1,131.5,126.7,115.1,130.8,124.6,118.31,114.2,120.3,
115.7,117.51,109.81,109.10,115.10,118.31,112.60,116.20,118,131,125.7)
strenght_CD <- c(70.42,72.47,78.2,74.89,71.21,78.39,69.02,73.1,79.28,76.48,70.25,72.88,68.23,
68.12,71.62,53.10,50.85,51.68,50.60,53.51,56.53,70.70,74.35,68.29)
# crear el data frame
df <- data.frame(Density,strenght_MD,strenght_CD)
df
## primer traeremos los datos
Density <- c(0.801,0.824,0.841,.816,.840,.842,.820,.802,.828,.819,.826,.802,.810,.802,.832,.796,
.759,.770,.759,.772,.806,.803,.845,.822,.971,.816,.836,.815,.822,.822,.843,.824,
.788,.782,.795,.805,.836,.788,.772,.776.758)
## primer traeremos los datos
Density <- c(0.801,0.824,0.841,.816,.840,.842,.820,.802,.828,.819,.826,.802,.810,.802,.832,.796,
.759,.770,.759,.772,.806,.803,.845,.822,.971,.816,.836,.815,.822,.822,.843,.824,
.788,.782,.795,.805,.836,.788,.772,.776,.758)
strenght_MD <- c(121.41,127.7,129.2,131.8,135.1,131.5,126.7,115.1,130.8,124.6,118.31,114.2,120.3,
115.7,117.51,109.81,109.10,115.10,118.31,112.60,116.20,118,131,125.7,126.10,
125.80,125.50,127.80,130.50,127.90,123.90,124.10,120.80,107.40,120.70,121.91,
122.31,110.60,103.51,110.71,113.80)
strenght_CD <- c(70.42,72.47,78.2,74.89,71.21,78.39,69.02,73.1,79.28,76.48,70.25,72.88,68.23,
68.12,71.62,53.10,50.85,51.68,50.60,53.51,56.53,70.70,74.35,68.29,72.1,70.64,
76.33,76.75,80.33,75.68,78.54,71.91,68.22,54.42,70.41,73.68,74.93,53.52,48.93,
53.67,52.42)
# crear el data frame
df <- data.frame(Density,strenght_MD,strenght_CD)
df
#### vector de medias muestrales
Vec_medias_mues <- colMeans(df)
mean(df$Density)
mean(df$strenght_MD)
mean(df$strenght_CD)
## Vectores observados
Density <- c(0.801,0.824,0.841,.816,.840,.842,.820,.802,.828,.819,.826,.802,.810,.802,.832,.796,
.759,.770,.759,.772,.806,.803,.845,.822,.971,.816,.836,.815,.822,.822,.843,.824,
.788,.782,.795,.805,.836,.788,.772,.776,.758)
strenght_MD <- c(121.41,127.7,129.2,131.8,135.1,131.5,126.7,115.1,130.8,124.6,118.31,114.2,
120.3,115.7,117.51,109.81,109.10,115.10,118.31,112.60,116.20,118,131,125.7,
126.10,125.80,125.50,127.80,130.50,127.90,123.90,124.10,120.80,107.40,120.70,
121.91,122.31,110.60,103.51,110.71,113.80)
strenght_CD <- c(70.42,72.47,78.2,74.89,71.21,78.39,69.02,73.1,79.28,76.48,70.25,72.88,68.23,
68.12,71.62,53.10,50.85,51.68,50.60,53.51,56.53,70.70,74.35,68.29,72.1,70.64,
76.33,76.75,80.33,75.68,78.54,71.91,68.22,54.42,70.41,73.68,74.93,53.52,48.93,
53.67,52.42)
# Matriz de datos
X <- data.frame(Density,strenght_MD,strenght_CD)
#### vector de medias muestrales  #################
Vec_medias_mues <- colMeans(X)
?matrix
##### matriz de observaciones centradas ##########
## primero matriz de unos
Uno <- matrix(1,nrow = 41, ncol = 1)
View(Uno)
(Uno %*% Vec_medias_mues)
X- (Uno %*% Vec_medias_mues)
?round
X- (Uno %*% round(Vec_medias_mues,2))
Uno %*% round(Vec_medias_mues,2)
Uno %*% round(Vec_medias_mues,3)
X- (Uno %*% round(Vec_medias_mues,3))
X_cen <- X- (Uno %*% round(Vec_medias_mues,3))
View(X)
View(X_cen)
t(X)
(t(X)*Uno)
(t(X)%*%Uno)
(1/41)*(t(X)%*%Uno)
# cantidad de observaciones
n <- 41
## primero matriz de unos
Uno <- matrix(1,nrow = n, ncol = 1)
round((1/41)*(t(X)%*%Uno),3)
###############################
#### vector de medias muestrales  #################
##################################
Vec_medias_mues <- round((1/41)*(t(X)%*%Uno),3)
View(Vec_medias_mues)
?col.names
install.packages(stats)
library(XICOR)
library("XICOR")
install.packages("autostats")
library(autostats)
calculateXI()
?autostats
xicor(
x,
y = NULL,
pvalue = FALSE,
ties = TRUE,
method = "asymptotic",
nperm = 1000,
factor = FALSE
)
library("psychTools")
data(peas)
calculateXI(peas$parent,peas$child)
install.packages(XICOR)
install.packages("XICOR")}
install.packages("XICOR")}
install.packages("XICOR")
install.packages("robustbase")
library(MASS, lib.loc = "C:/Program Files/R/R-4.1.1/library")
install.packages("rrcov")
p_unload
?p_unload
?detach
library(datasets)
datasets
data.table::
data
data("DNase")
#########################
pairs(DNase)
?pairs
data()
data(CO2)
rm(DNase)
#########################
## una matrix de scatterplots
pairs(CO2)
data(BOD)
#########################
## una matrix de scatterplots
pairs(BOD)
data("ChickWeight")
#########################
## una matrix de scatterplots
pairs(ChickWeight)
PlantGrowth
##########################################
####### Regresion lineal simple
#############################
grasas <- read.table('http://www.uam.es/joser.berrendero/datos/EdadPesoGrasas.txt',
header = TRUE) names(grasas)
names(grasas)
library(readr)
datospacientes <- read_table2("D:/José/Code/R/Regresion/lineal simple/datospacientes.txt",
col_types = cols(peso = col_number(),
edad = col_number(), grasas = col_number()))
View(datospacientes)
###########################
# matriz de scatterplots
pairs(datospacientes)
# matriz de correlación lineal
cor(datospacientes)
################################
## regresión
reg <- lm(grasas ~ edad, #edad variable independiente
data = datospacientes)
#
summary(reg)
# mirar la bondad de ajuste dela regresion
# coeficiente de determinación, mide la variabilidad de Y sobre X
anova(regr)
# mirar la bondad de ajuste dela regresion
# coeficiente de determinación, mide la variabilidad de Y sobre X
anova(reg)
#######################
#plot donde se mostrara la regresion
plot(datospacientes$edad, datospacientes$grasas,xlab = "Edad",ylab = "Grasas"
main = "Regresión lineal simple")
#######################
#plot donde se mostrara la regresion
plot(datospacientes$edad, datospacientes$grasas,xlab = "Edad",ylab = "Grasas",
main = "Regresión lineal simple")
# añadir linea
abline(reg, col = "red")
#################################################
## graficos que verifican lo supuestos del modelo
par(mfrow =c(2,2))
plot(lm(grasas ~ edad,data = datospacientes))
# muestra una tendencia pero no es muy clara por la aleatoriedad
#### el ultimo grafico tranformacion de cook
# no existe un dato demasiado influyente por tanto se puede seguir
###################################################
###### si neceisto eliminar datos atipicos
## datospacientes_reducido <- datospacientes[-c(6,8,16),]
# repetir proceso hasta aca con esta nueva
######################################################
###################################################
# utilizando la recta de minimos cuadrados para predicción
nuevas_edades <- data.frame(edad = sqe(30,35))
# muestra una tendencia pero no es muy clara por la aleatoriedad
#### el ultimo grafico tranformacion de cook
# no existe un dato demasiado influyente por tanto se puede seguir
###################################################
###### si neceisto eliminar datos atipicos
## datospacientes_reducido <- datospacientes[-c(6,8,16),]
# repetir proceso hasta aca con esta nueva
######################################################
###################################################
# utilizando la recta de minimos cuadrados para predicción
nuevas_edades <- data.frame(edad = seq(30,35))
nuevas edades
nuevas_edades
# para hacer la predicción de las nuevas edades
predict(reg,nuevas_edades)
#si quiero un predicción con una confianza y un intervalo
predict(reg,data.frame(nuevas_edades),
level = 0.95, # confianza
interval = "confidence")
#############################################33
# calculo de los parametros dela regresión lineal con significación dada
# significación 5
confint(reg,level = 0.95)
#significación 1
confint(reg,level = 0.99)
##########################################
# grafico donde se quiere ver
#######################
#plot donde se mostrara la regresion
plot(datospacientes$edad, datospacientes$grasas,xlab = "Edad",ylab = "Grasas",
main = "Regresión lineal simple")
##########################################
# grafico donde se quiere ver
#######################
#plot donde se mostrara la regresion
plot(datospacientes$edad, datospacientes$grasas,xlab = "Edad",ylab = "Grasas",
main = "Regresión lineal simple")
# añadir linea
abline(reg, col = "red")
# vector de donde vairan las dependientes
nuev_edades <- data.frame(edad=seq(20,60))
# intervao de confianza
ic <- predict(reg, nuev_edades,interval = "confidence")
View(ic)
# plotear
lines(nuev_edades$edad,ic[,2],lty = 5,# forma de la linea
col = "blue")
lines(nuev_edades$edad,ic[,3],lty = 5,# forma de la linea
col = "blue")
############## limmites de predicción
ic_pre <- predict(reg,nuev_edades,interval = "prediction")
#plotear
lines(nuev_edades$edad,ic_pre[,2],lty = 5,# forma de la linea
col = "green")
lines(nuev_edades$edad,ic_pre[,3],lty = 5,# forma de la linea
col = "green")
############################################3
####################################################
######################################################
## otro tipo de analisis
library(car)
#### pruebe de bonferonni para outliers
outlierTest(reg)
# no hay en este caso
#### valores altamente influyentes en la predicción
influenceIndexPlot(reg,id.n=3)
##
influencePlot(reg,id.n = 3)
#### test de normalidad
qqplot(reg)
#### test de normalidad
qqPlot(reg)
############
## prueba de heterocedasticidad
ncvTest(reg)
x_a_b_c <-c(10,8,13,9,11,14,6,4,12,7,5)
y_a <- c(8.04,6.95,7.58,8.81,8.33,9.96,7.24,4.26,10.84,4.82,5.68)
y_b <- c(9.14,8.14,8.74,8.77,9.26,8.1,6.13,3.1,9.13,7.26,4.74)
y_c <-c(7.46,6.77,12.74,7.11,7.81,8.84,6.08,5.39,8.15,6.42,5.73)
x_d <- c(8,8,8,8,8,8,8,19,8,8,8)
y_d <- c(6.58,5.76,7.71,8.84,8.47,7.04,5.25,12.5,5.56,7.91,6.89)
df<- data.frame(x_a_b_c,y_a,y_b,y_c,x_d,y_d)
attach(df)
View(df)
######################################
reg_a <- lm(y_a ~ x_a_b_c)
summary(reg_a)
#############
reg_b <- lm(y_b ~ x_a_b_c)
summary(reg_b)
###############
reg_c <- lm(y_c ~ x_a_b_c)
summary(reg_c)
##############
anova(reg_a)
###############
# coeficiente de determinación y su relacion con r #
############################
sqrt(0.6665)
###############
########################
cov(x_a_b_c,y_a)
###############
########################
0.5*cov(x_a_b_c,y_a)
##################
0.5*cov(x_a_b_c,y_b)
####################
0.5*cov(x_a_b_c,y_c)
View(reg_a)
??lm
?lm
###############
#######################
#
########################
sum(y_a)
###############
#######################
#
########################
sum(y_a^2)   sum(y_a)
###############
#######################
#
########################
y_a^2   sum(y_a)
###############
#######################
#
########################
y_a*t(y_a)   sum(y_a)
###############
#######################
#
########################
y_a*y_a   sum(y_a)
###############
#######################
#
########################
y_a*y_a
###############
#######################
#
########################
sum(y_a*y_a)
(sum(y_a))2
(sum(y_a))^2
nrow(df)
((sum(y_a))^2/nrow(df))
sum(y_a*y_a) - ((sum(y_a))^2/nrow(df))
reg_a$residuals
(reg_a$residuals)^2
(y_a)^2
###############
#######################
#
########################
sum((y_a)^2) - ((sum(y_a))^2/nrow(df))
sum((reg_a$residuals)^2)
sum((reg_a$residuals)^2)/(nrow(df)-2)
###############
#######################
#
########################
(sum((y_a)^2) - ((sum(y_a))^2/nrow(df)))/(nrow(df)-1)
(sum((reg_a$residuals)^2)/
(nrow(df)-2))/((sum((y_a)^2) - ((sum(y_a))^2/nrow(df)))/(nrow(df)-1))
1 - (sum((reg_a$residuals)^2)/
(nrow(df)-2))/((sum((y_a)^2) - ((sum(y_a))^2/nrow(df)))/(nrow(df)-1))
var(x_a_b_c)
var(x_a_b_c,y_a)
var(x_a_b_c,y_a)*0.5
cov(x_a_b_c,y_a)
cov(y_a)
var(y_a)
var(y_a,x_a_b_c)
nrow(df)*cov(x_a_b_c,y_a)
nrow(df)*cov(x_a_b_c,y_a)*0.5
((nrow(df)-1)*cov(x_a_b_c,y_a))*0.5
sum((reg_a$residuals)^2)
(((nrow(df)-1)*cov(x_a_b_c,y_a))*0.5) + sum((reg_a$residuals)^2)
##################
((nrow(df)-1)*cov(x_a_b_c,y_b))*0.5
####################
((nrow(df)-1)*cov(x_a_b_c,y_c))*0.5
##############
reg_d <- lm(y_d ~ x_d)
summary(reg_d)
#########################
((nrow(df)-1)*cov(x_d,y_d)*0.5
#########################
((nrow(df)-1)*cov(x_d,y_d))*0.5
####################################
##### tododas 27.5 ####### recordar que usamos el n-1 por la formula de R
##########################    SCm = betagorro1(Sxy)
#######################
######################################################
### suma de cuadrador no explicada
####################################################
sum((reg_a$residuals)^2)
######################
sum((reg_b$residuals)^2)
##########################
sum((reg_c$residuals)^2)
########################
sum((reg_d$residuals)^2)
?lm}
?lm
###############
#######################
# coeficinete de correalción
############################
cor(x_a_b_c,y_a)
###############
cor(x_a_b_c,y_b)
###############
cor(x_a_b_c,y_c)
#################
cov(x_d,y_d)
#################
cor(x_d,y_d)
###################################
##  el mismo para todos
########################
##############################################
### en las listas reg los valores y estimados son fitted value
plot(reg_a$fitted.values,reg_a$residuals)
?qqplot
qqnorm(x_a_b_c)
qqnorm(reg_a$residuals)
qqnorm(y_a)
qqnorm(reg_a$residuals);qqline(y, col = 2)
qqnorm(reg_a$residuals);qqline(reg_a$residuals, col = 2)
qqnorm(reg_b$residuals);qqline(reg_b$residuals, col = 2)
qqnorm(reg_c$residuals);qqline(reg_c$residuals, col = 2)
qqnorm(reg_d$residuals);qqline(reg_d$residuals, col = 2)
qqnorm(x_a_b_c); qqline(x_a_b_c, col = 2)
qnorm(0.045)
abline(v = 0)
qqnorm(reg_d$residuals);qqline(reg_d$residuals, col = 2)
hist(reg_a$residuals)
curve(norm())
rnorm(100)
cruve(rnorm(100))
cruve(norm(rnorm(100))
cruve(norm(rnorm(100))
curve(norm(rnorm(100))
curve(norm())
curve(norm(x))
line(norm())
plot(reg_a)
?qf
qf(0.95,2,2)
qchisq(0.95,4)
?scale
X <- matrix(c(1,2,3,4,6,5,7,6,5,4,7,8,6,5,3))
View(X)
X <- matrix(c(1,2,3),c(4,6,5),c(7,6,5))
X <- matrix(c(1,2,3),c(4,6,5),c(7,6,5),ncol = 3)
X <- matrix(c(1,2,3),c(4,6,5),c(7,6,5),ncol = 3,nrow = 3)
X <- matrix(c(3,2,4,6,8,9,4,1,2),ncol = 3,nrow = 3)
scale(X)
colMeans(X)
var(X)
sd(X)
scale(X, scale = F)
Z <- scale(X)
cor(Z)
cor(X)
var(Z)
setwd("~/")
setwd("D:/José/NACHO/analisis de regresión/Taller 1/Taller 1")
setwd("D:/José/NACHO/analisis de regresión/Taller 1/Taller 1")
setwd("D:/José/NACHO/analisis de regresión/Taller 1/Taller 1")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
library(car)
